{"version":3,"sources":["components/Edit.js","components/Header.js","components/Main.js","App.js","index.js"],"names":["Edit","props","incomplete","setIncomplete","useState","editTodo","setEditTodo","editDetail","setEditDetail","editDeadline","setEditDeadline","editId","setEditId","check2","htmlFor","type","id","name","value","onChange","e","target","onClick","map","todo","includes","parseInt","get1","edit","todos","detail","deadline","window","alert","disabled","Header","setFilter","setDetail","setDeadline","setTodos","data","status","date","comment","check","confirm","length","sort","document","getElementById","a","b","defaultValue","Main","filter","setComment","idOnly","setIdOnly","incompleteLists","setIncompleteLists","completeLists","setCompleteLists","useEffect","num3","slice","incomp","filterList","lists","console","log","inputComment","st","querySelectorAll","i","textContent","parentElement","classList","add","remove","index","splice","deleteButton","newTodos","statusButton","get","get2","commentButton","App","state","JSON","parse","localStorage","getItem","setItem","stringify","Date","getFullYear","getMonth","getDate","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e90b072.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const Edit = (props) => {\n  const { incomplete, setIncomplete } = props;\n\n  const [editTodo, setEditTodo] = useState(\"\");\n  const [editDetail, setEditDetail] = useState(\"\");\n  const [editDeadline, setEditDeadline] = useState(\"\");\n  const [editId, setEditId] = useState(0);\n\n  //編集IDインプット\n  const inputEditId = (e) => {\n    setEditId(e.target.value);\n  };\n\n  //編集タスク名入力欄インプット\n  const inputEditTodo = (e) => {\n    setEditTodo(e.target.value);\n  };\n\n  //編集詳細インプット\n  const inputEditDetail = (e) => {\n    setEditDetail(e.target.value);\n  };\n\n  //編集期日インプット\n  const inputEditDeadline = (e) => {\n    setEditDeadline(e.target.value);\n  };\n\n  const editButton = () => {\n    const num = incomplete.map((todo) => {\n      return todo.id;\n    });\n\n    if (!num.includes(parseInt(editId))) {\n      window.alert(\"入力したIDのリストはありません\");\n      return;\n    }\n\n    const get1 = incomplete.map((todo) => {\n      // eslint-disable-next-line eqeqeq\n      if (todo.id == editId) {\n        const edit = {\n          ...todo,\n          todos: editTodo,\n          detail: editDetail,\n          deadline: editDeadline,\n        };\n        setEditId(\"\");\n        setEditTodo(\"\");\n        setEditDetail(\"\");\n        setEditDeadline(\"\");\n\n        return edit;\n      } else {\n        return todo;\n      }\n    });\n\n    setIncomplete([...get1]);\n  };\n\n  const check2 = editTodo === \"\" || editDetail === \"\" || editDeadline === \"\";\n\n  /////////////////////////////描画エリア/////////////////////////////\n  return (\n    <>\n      <h4>タスク編集</h4>\n      <div>\n        <label htmlFor=\"editId\">ID</label>\n        <br />\n        <input\n          type=\"number\"\n          id=\"editId\"\n          name=\"editId\"\n          value={editId}\n          onChange={inputEditId}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"editTodo\">タスク</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"editTodo\"\n          name=\"editTodo\"\n          value={editTodo}\n          onChange={inputEditTodo}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"editDetail\">詳細</label>\n        <br />\n        <textarea\n          id=\"editDetail\"\n          name=\"editDetail\"\n          value={editDetail}\n          onChange={inputEditDetail}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"editDeadline\">期日</label>\n        <br />\n        <input\n          type=\"date\"\n          id=\"deadline\"\n          name=\"editDeadline\"\n          value={editDeadline}\n          onChange={inputEditDeadline}\n        />\n      </div>\n\n      <button onClick={editButton} disabled={check2}>\n        タスク編集\n      </button>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Header = (props) => {\n  const {\n    todos,\n    detail,\n    deadline,\n    incomplete,\n    setFilter,\n    setDetail,\n    setDeadline,\n    setIncomplete,\n    setTodos,\n    id,\n    status,\n    date,\n    comment,\n  } = props;\n\n  //詳細インプット\n  const inputDetail = (e) => {\n    setDetail(e.target.value);\n  };\n\n  //期日インプット\n  const inputDeadline = (e) => {\n    setDeadline(e.target.value);\n  };\n\n  const data = {\n    id: id,\n    todos: todos,\n    deadline: deadline,\n    status: status,\n    date: date,\n    detail: detail,\n    comment: comment,\n  };\n\n  //タスク追加ボタン\n  const inputButton = () => {\n    setIncomplete([...incomplete, data]);\n    setTodos(\"\");\n    setDetail(\"\");\n    setDeadline(\"\");\n  };\n\n  const allDeleteButton = () => {\n    const result = window.confirm(\"全てのタスクを消しますか？\");\n    if (result) {\n      setIncomplete([]);\n    }\n  };\n\n  //ID降順ソート\n  const desc = () => {\n    incomplete.sort((a, b) => {\n      if (a.id < b.id) {\n        return 1;\n      }\n      if (a.id > b.id) {\n        return -1;\n      }\n      return 0;\n    });\n\n    setIncomplete([...incomplete]);\n  };\n\n  //ID昇順ソート\n  const asc = () => {\n    incomplete.sort((a, b) => {\n      if (a.id < b.id) {\n        return -1;\n      }\n      if (a.id > b.id) {\n        return 1;\n      }\n      return 0;\n    });\n\n    setIncomplete([...incomplete]);\n  };\n\n  const check = todos === \"\" || detail === \"\" || deadline === \"\";\n\n  //タスク名入力欄インプット\n  const inputTodos = (e) => {\n    setTodos(e.target.value);\n  };\n\n  /////////////////////////////描画エリア/////////////////////////////\n  return (\n    <>\n      <div>\n        <label htmlFor=\"todo\">タスク入力</label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"todo\"\n          name=\"todo\"\n          value={todos}\n          onChange={inputTodos}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"detail\">詳細</label>\n        <br />\n        <textarea\n          id=\"detail\"\n          name=\"detail\"\n          value={detail}\n          onChange={inputDetail}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"deadline\">期日</label>\n        <br />\n        <input\n          type=\"date\"\n          id=\"deadline\"\n          name=\"deadline\"\n          value={deadline}\n          onChange={inputDeadline}\n        />\n      </div>\n\n      <div>\n        <button onClick={inputButton} disabled={check}>\n          タスク追加\n        </button>\n        <button onClick={allDeleteButton} disabled={incomplete.length === 0}>\n          全タスク削除\n        </button>\n\n        <select\n          id=\"sort\"\n          onChange={() => {\n            const sort = document.getElementById(\"sort\");\n            if (sort.value === \"desc\") {\n              desc();\n            } else if (sort.value === \"asc\") {\n              asc();\n            }\n          }}\n          disabled={incomplete.length === 0}\n        >\n          <option>ソート</option>\n          <option value=\"desc\">ID降順</option>\n          <option value=\"asc\">ID昇順</option>\n        </select>\n\n        {/* ---------------------- フィルター ---------------------- */}\n\n        <select defaultValue=\"all\" onChange={(e) => setFilter(e.target.value)}>\n          <option value=\"all\">全て表示</option>\n          <option value=\"num3\">3つ表示</option>\n          <option value=\"imcomplete\">未完了のみ表示</option>\n          <option value=\"complete\">完了のみ表示</option>\n        </select>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nexport const Main = (props) => {\n  const { incomplete, filter, setIncomplete, comment, setComment } = props;\n\n  const [idOnly, setIdOnly] = useState([]);\n  const [incompleteLists, setIncompleteLists] = useState([]);\n  const [completeLists, setCompleteLists] = useState([]);\n\n  const commentButton = (index) => {\n    const get = incomplete.splice(index, 1)[0];\n    const get2 = { ...get, comment: comment };\n    incomplete.splice(index, 0, get2);\n    setIncomplete([...incomplete]);\n  };\n\n  // ステータスの切り替え\n  const statusButton = (index) => {\n    if (incomplete[index].status === \"未完了\") {\n      let target = incomplete[index];\n      target.status = \"完了\";\n\n      const newTodos = [...incomplete];\n      newTodos.splice(index, 1, target);\n      setIncomplete(newTodos);\n    } else if (incomplete[index].status === \"完了\") {\n      let target = incomplete[index];\n      target.status = \"未完了\";\n\n      const newTodos = [...incomplete];\n      newTodos.splice(index, 1, target);\n      setIncomplete(newTodos);\n    }\n  };\n\n  //numフィルター\n  useEffect(() => {\n    const filterLists = [...incomplete];\n    const num3 = filterLists.slice(0, 3);\n\n    setIdOnly([...num3]);\n  }, [incomplete]);\n\n  //未完了フィルター\n  useEffect(() => {\n    const filterLists = [...incomplete];\n\n    const incomp = filterLists.filter(\n      (filterList) => filterList.status === \"未完了\"\n    );\n\n    setIncompleteLists([...incomp]);\n  }, [incomplete]);\n\n  //完了フィルター\n  useEffect(() => {\n    const filterLists = [...incomplete];\n\n    const incomp = filterLists.filter(\n      (filterList) => filterList.status === \"完了\"\n    );\n\n    setCompleteLists([...incomp]);\n  }, [incomplete]);\n\n  let lists = [];\n\n  switch (filter) {\n    case \"all\":\n      lists = incomplete;\n      break;\n    case \"num3\":\n      lists = idOnly;\n      break;\n    case \"imcomplete\":\n      console.log(\"imcomplete\");\n      lists = incompleteLists;\n      break;\n    case \"complete\":\n      console.log(\"complete\");\n      lists = completeLists;\n      break;\n    default:\n      lists = incomplete;\n  }\n\n  const deleteButton = (todo, index) => {\n    const result = window.confirm(`ID : ${todo.id} のタスクを消しますか？`);\n    if (result) {\n      incomplete.splice(index, 1);\n      setIncomplete([...incomplete]);\n    }\n  };\n\n  const inputComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  useEffect(() => {\n    const st = document.querySelectorAll(\"#st\");\n    for (let i = 0; i < st.length; i++) {\n      if (st[i].textContent === \"ステータス : 未完了\") {\n        st[i].parentElement.classList.add(\"bgyellow\");\n      } else {\n        st[i].parentElement.classList.remove(\"bgyellow\");\n      }\n    }\n  });\n\n  /////////////////////////////描画エリア/////////////////////////////\n  return (\n    <>\n      <div id=\"todos\">\n        {lists.map((todo, index) => (\n          <div key={index} id=\"tl\">\n            <ul>\n              <li>{`ID : ${todo.id}`}</li>\n              <li>{`作成日 : ${todo.date}`}</li>\n              <li id=\"st\">{`ステータス : ${todo.status}`}</li>\n              <li>{`タスク : ${todo.todos}`}</li>\n              <li>{`詳細 : ${todo.detail}`}</li>\n              <li>{`期日 : ${todo.deadline}`}</li>\n\n              <div>\n                <button onClick={() => deleteButton(todo, index)}>削除</button>\n                <button onClick={() => statusButton(index)}>\n                  {todo.status === \"完了\" ? \"未完了\" : \"完了\"}\n                </button>\n                <div>\n                  <label htmlFor={`comment${todo.id}`}>コメント</label>\n                  <input\n                    type=\"text\"\n                    id={`comment${todo.id}`}\n                    name={`comment${todo.id}`}\n                    onChange={inputComment}\n                  />\n                  <button onClick={() => commentButton(index)}>追加</button>\n                  <p>{todo.comment}</p>\n                </div>\n              </div>\n            </ul>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Edit } from \"./components/Edit\";\nimport { Header } from \"./components/Header\";\nimport { Main } from \"./components/Main\";\n\nexport const App = () => {\n  const state = JSON.parse(localStorage.getItem(\"todos\"));\n  let status = \"未完了\";\n  const [todos, setTodos] = useState(\"\");\n  const [detail, setDetail] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n  const [filter, setFilter] = useState([]);\n  const [incomplete, setIncomplete] = useState(\n    state\n      ? state\n      : [\n          {\n            id: 1,\n            todos: \"勉強する\",\n            deadline: \"2021-08-12\",\n            status: \"未完了\",\n            date: \"2021-08-10\",\n            detail: \"プログラミングの勉強と読書をする\",\n            comment: \"\",\n          },\n          {\n            id: 2,\n            todos: \"仕事する\",\n            deadline: \"2021-08-15\",\n            status: \"未完了\",\n            date: \"2021-08-10\",\n            detail: \"企業に電話とメールをする\",\n            comment: \"\",\n          },\n        ]\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(incomplete));\n  }, [incomplete]);\n\n  const id =\n    incomplete.length === 0 ? 1 : incomplete[incomplete.length - 1].id + 1;\n  const date =\n    new Date().getFullYear() +\n    \"-\" +\n    (new Date().getMonth() + 1) +\n    \"-\" +\n    new Date().getDate();\n\n  /////////////////////////////描画エリア/////////////////////////////\n  return (\n    <>\n      <Header\n        todos={todos}\n        detail={detail}\n        deadline={deadline}\n        incomplete={incomplete}\n        setFilter={setFilter}\n        setDetail={setDetail}\n        setDeadline={setDeadline}\n        setIncomplete={setIncomplete}\n        setTodos={setTodos}\n        id={id}\n        status={status}\n        date={date}\n        comment={comment}\n      />\n\n      <Main\n        incomplete={incomplete}\n        setComment={setComment}\n        setIncomplete={setIncomplete}\n        filter={filter}\n        comment={comment}\n      />\n\n      <Edit incomplete={incomplete} setIncomplete={setIncomplete} />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}